<!--
  Copyright 2020 Spotify AB.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.flyte</groupId>
    <artifactId>flytekit-parent</artifactId>
    <version>0.2.0-SNAPSHOT</version>
  </parent>

  <artifactId>jflyte-build</artifactId>

  <properties>
    <docker.image>${env.FLYTE_INTERNAL_IMAGE}</docker.image>
    <docker.tag>${project.version}</docker.tag>

    <maven.deploy.skip>true</maven.deploy.skip>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.flyte</groupId>
      <artifactId>jflyte</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.flyte</groupId>
      <artifactId>flytekit-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.flyte</groupId>
      <artifactId>jflyte-google-cloud</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>jflyte</finalName>
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-runtime</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/plugins</outputDirectory>
              <useBaseVersion>false</useBaseVersion>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>true</overWriteSnapshots>
              <includeScope>compile</includeScope>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <shadeTestJar>false</shadeTestJar>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <transformers>
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
              </transformers>
              <relocations>
                <relocation>
                  <pattern>com.google.guava</pattern>
                  <shadedPattern>org.flyte.jflyte.shaded.guava</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>com.google.thirdparty</pattern>
                  <shadedPattern>org.flyte.jflyte.shaded.com.google.thirdparty</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>com.google.protobuf</pattern>
                  <shadedPattern>org.flyte.jflyte.shaded.protobuf</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>com.google.common</pattern>
                  <shadedPattern>org.flyte.jflyte.shaded.com.google.common</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>com.google.inject</pattern>
                  <shadedPattern>org.flyte.jflyte.shaded.com.google.inject</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>com.google.api</pattern>
                  <shadedPattern>org.flyte.jflyte.shaded.com.google.api</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>com.google.gson</pattern>
                  <shadedPattern>org.flyte.jflyte.shaded.com.google.gson</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>com.google.logging</pattern>
                  <shadedPattern>org.flyte.jflyte.shaded.com.google.logging</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>picocli</pattern>
                  <shadedPattern>org.flyte.jflyte.shaded.picocli</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>io.grpc</pattern>
                  <shadedPattern>org.flyte.jflyte.shaded.grpc</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>io.opencensus</pattern>
                  <shadedPattern>org.flyte.jflyte.shaded.opencensus</shadedPattern>
                </relocation>
              </relocations>
              <artifactSet>
                <includes>
                  <include>*</include>
                </includes>
                <excludes>
                  <exclude>com.google.auto.value:auto-value-annotations</exclude>
                  <exclude>com.google.auto.value:auto-value</exclude>
                  <exclude>com.google.code.findbugs:annotations</exclude>
                  <exclude>com.google.code.findbugs:jsr250</exclude>
                  <exclude>findbugs:annotations</exclude>
                  <exclude>javax.activation:activation</exclude>
                  <exclude>javax.annotation:jsr250-api</exclude>
                  <exclude>com.google.errorprone:error_prone_annotations</exclude>
                  <exclude>com.google.j2objc:j2objc-annotations</exclude>
                  <exclude>org.codehaus.mojo:animal-sniffer-annotations</exclude>
                </excludes>
              </artifactSet>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>dockerfile-maven-plugin</artifactId>
        <configuration>
          <repository>${docker.image}</repository>
          <tag>${docker.tag}</tag>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
